# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  reactjs-build-and-test:
    docker:
      - image: circleci/node:14.17-browsers
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-v1-{{ checksum "client/package-lock.json" }}
      - run:
          name: Install Dependencies
          command: cd client && npm ci
      - save_cache:
          key: npm-cache-v1-{{ checksum "client/package-lock.json" }}
          paths:
            - /home/circleci/.npm
      - run:
          name: Run ReactJS Tests
          command: cd client && npm test
      - run:
          name: Run NPM install to get jest
          command: cd client && npm install
      - save_cache:
          key: npm-cache-v1-{{ checksum "client/package-lock.json" }}
          paths:
            - client/node_modules
      - run:
          name: "Run jest and collect coverage reports"
          command: ls client/node_modules/jest/bin/ #&& node_modules/jest/bin/jest --collectCoverage
      - store_artifacts:
          path: client/coverage
      - run:
          name: Send to CodeCov
          command: bash <(curl -s https://codecov.io/bash)


  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    working_directory: ~/repo
    steps:
      # Checkout the code as the first step.
      - checkout
      - restore_cache:
          keys: 
          - v1-dependencies-{{ checksum "pom.xml" }}
          - v1-dependencies-
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test

      - run: mvn integration-test jacoco:report
      - store_test_results:
          path: target/surefire-reports
      - run:
          name: Send to CodeCov
          command: bash <(curl -s https://codecov.io/bash)


workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample: 
    jobs:
      - reactjs-build-and-test
      - build-and-test
